from pathlib import Path
import sys
import os
sys.path.append(str(Path(os.path.abspath(__file__)).parent.parent))
from utils import *

def forward(state2state, state2observation, initial_state, observation):
    """
    Given a HMM with parameter (state2state, state2observation, initial_state)
    and the observation,
    return the probability of the observation generated by this HMM

    state2state is a matrix shaped of [state_size, state_size]
    state2observation is a matrix shaped of [state_size, observation_size]
    initial_state is a tensor shaped of [state_size], whose each dimension means the probability of each state
    observation is a tensor shaped of [sequence_length]
    observation_size is the number of all the possible observations

    the return value consists of two parts:
    the probability of the observation,
    and a sequence of probability of each state of each step
    """
    state_size, _ = state2state.shape
    sequence_length, = observation.shape

    seq_state_prob = np.zeros([sequence_length, state_size])
    state_prob = initial_state
    for i, o in enumerate(observation):
        # given the observation of previous steps, get the probability of this state
        state_prob *= state2observation[:, o]
        seq_state_prob[i] = state_prob
        # the probability of each state in next step
        state_prob = state_prob @ state2state
    print(seq_state_prob)
    return sum(seq_state_prob[-1]), seq_state_prob


if __name__ == '__main__':
    A = np.array(
        [[.5, .2, .3],
         [.3, .5, .2],
         [.2, .3, .5]]
        )
    B = np.array(
        [[.5, .5],
         [.4, .6],
         [.7, .3]]
        )
    pi = np.array([.2, .4, .4])
    observation = np.array([0, 1, 0])
    print(forward(A, B, pi, observation)[0])
